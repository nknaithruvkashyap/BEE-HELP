# -*- coding: utf-8 -*-
"""SpectrogramConversion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-HnKDY-MM6w_VorNDXNI6Q0mE6AmqiL2
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import librosa
import librosa.display
import matplotlib.pyplot as plt
import numpy as np

# Define paths
input_path = '/path/to/input'
output_path = '/path/to/output'

# Create output directory if it doesn't exist
os.makedirs(output_path, exist_ok=True)

# Function to convert wav to mel spectrogram
def convert_to_melspectrogram(filename, output_filename):
    # Load audio file
    y, sr = librosa.load(filename, sr=None)
    # Generate Mel spectrogram
    S = librosa.feature.melspectrogram(y=y, sr=sr, n_mels=128)
    S_DB = librosa.power_to_db(S, ref=np.max)

    # Plot and save the spectrogram
    plt.figure(figsize=(10, 4))
    librosa.display.specshow(S_DB, sr=sr, x_axis='time', y_axis='mel')
    plt.axis('off')  # Remove axes
    plt.savefig(output_filename, bbox_inches='tight', pad_inches=0)
    plt.close()

# Initialize skip counter
skip_count = 0

# First, count how many spectrograms will be skipped
for root, _, files in os.walk(input_path):
    for file in files:
        if file.endswith('.wav'):
            output_file = os.path.join(output_path, file.replace('.wav', '.png'))
            if os.path.exists(output_file):
                skip_count += 1

# Print the total number of skipped spectrograms
print(f'Total spectrograms skipped: {skip_count}')

# Now, process each file
for root, _, files in os.walk(input_path):
    for file in files:
        if file.endswith('.wav'):
            input_file = os.path.join(root, file)
            output_file = os.path.join(output_path, file.replace('.wav', '.png'))

            # Check if the spectrogram already exists
            if not os.path.exists(output_file):
                convert_to_melspectrogram(input_file, output_file)
                print(f'Converted: {input_file} to {output_file}')
            else:
                print(f'Skipped (already exists): {output_file}')

!nvidia-smi